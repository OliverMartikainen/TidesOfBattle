{"version":3,"sources":["services/tokenManager.js","resources/one_sword.jpg","resources/one_tower.jpg","resources/zero.jpg","resources/zero_skull.jpg","resources/two.jpg","resources/three.jpg","resources/backside.jpg","components/TideCard.js","utils/config.js","services/cards.js","components/TideCards.js","services/users.js","App.js","index.js"],"names":["TOKEN","TIDE_CARDS_DATA","zero","zero_skull","one_sword","one_tower","two","three","TideCard","card","username","handleSelect","cardName","cardOwner","cardIndex","img","backside","alt","style","backgroundColor","className","onDoubleClick","src","setToken","token","getAuthHeader","headers","Authorization","console","log","process","SERVICE_URL","config","select","a","authHeader","axios","post","res","data","error","cardsSSE","EventSource","forceEnd","get","status","nosword","initialLoad","selectedCards","ownCards","othersCards","swordOwner","CardSubHandler","setCardStates","cardSub","cardsService","onopen","onerror","close","setTimeout","onmessage","event","msgObj","JSON","parse","msg","cards","state","filter","c","waitingForSword","usernames","doneBy","sseMsgActions","cardsArray","i","push","TideCards","usernameOptions","useState","defaultState","cardStates","useEffect","forEach","initThing","handleCardSelect","ownCardsFiltered","length","cardInfo","handleSwordSkip","forceReset","cardComps","map","isSwordOwner","isSwordBtnEnabled","display","overflow","disabled","onClick","height","login","stats","changeSwordUser","newSwordUser","addUser","saveUser","localStorage","setItem","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","LoginScreen","setUsername","classes","handleChange","target","value","usersService","options","name","FormControl","InputLabel","shrink","htmlFor","NativeSelect","onChange","inputProps","id","App","storedUser","getItem","Token","tokenManager","getDefaultUser","setUsernameOptions","fetchUsernames","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fa2c9b2.chunk.js","sourcesContent":["let TOKEN\r\n\r\nexport const setToken = (token) => {\r\n    TOKEN = token ? `bearer ${token}` : null\r\n}\r\n\r\nexport const getAuthHeader = () => ({\r\n    headers: { Authorization: TOKEN }\r\n})\r\n\r\nexport default {\r\n    getAuthHeader,\r\n    setToken\r\n}","export default __webpack_public_path__ + \"static/media/one_sword.700197e8.jpg\";","export default __webpack_public_path__ + \"static/media/one_tower.6ae8d412.jpg\";","export default __webpack_public_path__ + \"static/media/zero.da497042.jpg\";","export default __webpack_public_path__ + \"static/media/zero_skull.e9f10cf5.jpg\";","export default __webpack_public_path__ + \"static/media/two.44ef7bc4.jpg\";","export default __webpack_public_path__ + \"static/media/three.4ee9cadd.jpg\";","export default __webpack_public_path__ + \"static/media/backside.bc07350a.jpg\";","import one_sword from 'resources/one_sword.jpg'\r\nimport one_tower from 'resources/one_tower.jpg'\r\nimport zero from 'resources/zero.jpg'\r\nimport zero_skull from 'resources/zero_skull.jpg'\r\nimport two from 'resources/two.jpg'\r\nimport three from 'resources/three.jpg'\r\nimport backside from 'resources/backside.jpg'\r\n\r\nconst TIDE_CARDS_DATA = {\r\n    'zero': zero,\r\n    'zero_skull': zero_skull,\r\n    'one_sword': one_sword,\r\n    'one_tower': one_tower,\r\n    'two': two,\r\n    'three': three\r\n}\r\n\r\nconst TideCard = ({ card, username, handleSelect }) => {\r\n    const { cardName, cardOwner, cardIndex } = card\r\n    const img = TIDE_CARDS_DATA[cardName] || backside\r\n    const alt = cardName || 'unknown'\r\n\r\n    const color = cardOwner ? ((cardOwner === username) ? 'red' : 'cyan') : null\r\n\r\n    const style = { backgroundColor: color } \r\n\r\n    return (\r\n        <div\r\n            className='tidecard-wrap'\r\n            style={style}\r\n            onDoubleClick={() => handleSelect(cardIndex)}\r\n        >\r\n            <img className='tidecard' src={img} alt={alt} />\r\n            CardOwner: {cardOwner}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TideCard","let baseUrl = './api'\r\n\r\nconsole.log(process.env.NODE_ENV, process.env.REACT_APP_BACKEND_URL)\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    baseUrl = process.env.REACT_APP_BACKEND_URL || baseUrl\r\n}\r\n\r\n\r\nexport default { baseUrl }","import axios from 'axios'\r\nimport { getAuthHeader } from './tokenManager'\r\nimport config from 'utils/config'\r\n\r\nconst baseUrl = config.baseUrl\r\nconst SERVICE_URL = `${baseUrl}/cards`\r\n\r\n/**\r\n * \r\n * @param {Number} cardIndex \r\n * @returns {Promise<Object | null>}\r\n */\r\nconst select = async (cardIndex) => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.post(`${SERVICE_URL}/select`, { cardIndex }, authHeader)\r\n\r\n        const card = res.data\r\n\r\n        return card\r\n    } catch (error) {\r\n        console.error(error)\r\n        return null\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @returns {Promise<Boolean>}\r\n */\r\nconst forceEnd = async () => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.get(`${SERVICE_URL}/forceEnd`, authHeader)\r\n        return (res.status === 204)\r\n    } catch (error) {\r\n        console.error(error)\r\n        return false\r\n    }\r\n}\r\n\r\n/**\r\n * @returns {Promise<Boolean>}\r\n */\r\nconst nosword = async () => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.get(`${SERVICE_URL}/nosword`, authHeader)\r\n        return (res.status === 204)\r\n    } catch (error) {\r\n        console.error(error)\r\n        return false\r\n    }\r\n}\r\n\r\n//card --> { cardIndex: Number, cardOwner: String, cardName: String }\r\n\r\n/**\r\n * \r\n * @returns {Promise<{ swordOwner: String, ownCards: Array, othersCards: Array } | null >}\r\n */\r\nconst initialLoad = async () => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.get(`${SERVICE_URL}/initialLoad`, authHeader)\r\n        const data = res.data\r\n        const { ownCards, othersCards } = data.selectedCards\r\n        return {\r\n            swordOwner: data.swordOwner,\r\n            ownCards: ownCards,\r\n            othersCards: othersCards\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error)\r\n        return null\r\n    }\r\n}\r\n\r\nconst cardsSSE = () => {\r\n    try {\r\n        const cardSub = new EventSource(`${SERVICE_URL}/sse`)\r\n        return cardSub\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport default {\r\n    cardsSSE,\r\n    forceEnd,\r\n    nosword,\r\n    select,\r\n    initialLoad\r\n}","import { useEffect, useState } from 'react'\r\nimport TideCard from './TideCard'\r\nimport cardsService from 'services/cards'\r\n\r\nconst sseMsgActions = (data, setCardStates) => {\r\n    try {\r\n        const msgObj = JSON.parse(data)\r\n        console.log(msgObj.msg)\r\n        switch (msgObj.msg) {\r\n            case 'end':\r\n                msgObj.cards\r\n                setCardStates(state => {\r\n                    const { cards } = msgObj\r\n                    const { username } = state\r\n                    const othersCards = cards.filter(c => c.cardOwner !== '' && c.cardOwner !== username)\r\n                    return {\r\n                        ...state,\r\n                        cards,\r\n                        othersCards,\r\n                        waitingForSword: ''\r\n                    }\r\n                })\r\n                console.log('ROUND END')\r\n                //--> set all cards this --> set ownCards & othersCards\r\n                return\r\n\r\n            case 'nosword':\r\n                msgObj.username\r\n                //just nice to know i guesS? --> should trigger end\r\n                console.log(msgObj.username, 'NOSWORD')\r\n                return\r\n\r\n            case 'select':\r\n                setCardStates(state => {\r\n                    const { cardIndex, cardOwner } = msgObj\r\n                    state.cards[cardIndex].cardOwner = cardOwner\r\n                    return { ...state }\r\n                })\r\n                //use this to fill the cards array --> ownCards & othersCards to display on bottom side seperate\r\n                return\r\n            case 'forceEnd':\r\n                //just nice to know\r\n                console.log(msgObj.username, 'FORCE END')\r\n                return\r\n            case 'too-many-users':\r\n                msgObj.usernames //nice to know --> could pop out alert if wanted to\r\n                console.log('TOO MANY USER SELECTED CARDS', msgObj.usernames)\r\n                return\r\n            case 'waiting-sword':\r\n                //display sword button to this player \r\n                msgObj.username\r\n                setCardStates(state => {\r\n                    return {\r\n                        ...state,\r\n                        waitingForSword: msgObj.username\r\n                    }\r\n                })\r\n                return\r\n            case 'sword-change':\r\n                console.log(msgObj.doneBy, 'SWORD USER CHANGED TO', msgObj.username)\r\n                setCardStates(state => {\r\n                    return {\r\n                        ...state,\r\n                        swordOwner: msgObj.username\r\n                    }\r\n                })\r\n                return\r\n\r\n            default:\r\n                console.error('UNDEFINED SSE MSG', msgObj)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error, data)\r\n    }\r\n}\r\n\r\n\r\nconst CardSubHandler = (setCardStates) => {\r\n    const cardSub = cardsService.cardsSSE()\r\n\r\n    cardSub.onopen = () => {\r\n        console.log('CARD SUB ACTIVE')\r\n    }\r\n    cardSub.onerror = () => {\r\n        console.error('CARD SUB ERROR')\r\n        cardSub.close()\r\n        setTimeout(() => CardSubHandler(setCardStates), (10 * 1000))\r\n    }\r\n    cardSub.onmessage = (event) => {\r\n        console.log('CSUB MSG')\r\n        sseMsgActions(event.data, setCardStates)\r\n    }\r\n    return cardSub\r\n}\r\n\r\nconst cardsArray = () => {\r\n    let cardsArray = []\r\n    for (let i = 0; i < 24; i++) {\r\n        cardsArray.push({ cardName: '', cardOwner: '', cardIndex: i })\r\n    }\r\n    return cardsArray\r\n}\r\n\r\nconst defaultState = (username, usernameOptions) => ({\r\n    cards: cardsArray(),\r\n    selectedCards: [],\r\n    ownCards: [],\r\n    othersCards: [],\r\n    waitingForSword: '', //username who's sword we are waiting\r\n    swordOwner: '',\r\n    usernameOptions: usernameOptions,\r\n    username: username\r\n})\r\n\r\nconst TideCards = ({ username, usernameOptions }) => {\r\n    const [cardStates, setCardStates] = useState(() => defaultState(username, usernameOptions))\r\n\r\n    useEffect(() => {\r\n        const initThing = async () => {\r\n            const data = await cardsService.initialLoad()\r\n            const { swordOwner, ownCards, othersCards } = data\r\n            const selectedCards = [...ownCards, ...othersCards]\r\n\r\n            setCardStates(state => {\r\n                const cards = state.cards\r\n                selectedCards.forEach(c => {\r\n                    const { cardOwner, cardIndex } = c\r\n                    cards[cardIndex].cardOwner = cardOwner\r\n                })\r\n                return {\r\n                    ...state,\r\n                    cards,\r\n                    swordOwner,\r\n                    ownCards,\r\n                    othersCards\r\n                }\r\n            })\r\n        }\r\n        initThing()\r\n        const cardSub = CardSubHandler(setCardStates)\r\n\r\n        return () => cardSub.close()\r\n    }, [])\r\n\r\n    const handleCardSelect = async (cardIndex) => {\r\n        const { username, swordOwner, cards, ownCards, othersCards } = cardStates\r\n\r\n        const card = cards[cardIndex]\r\n        if (card.cardOwner !== '') return //should prevent selecting alreadt selected card --> check done in backend too\r\n\r\n        //the rest of the picks are not preventend in backend atm.\r\n\r\n        //check if non swordowner tries to pick a 2nd\r\n        const selectedCards = cards.filter(c => c.cardOwner !== '')\r\n        const ownCardsFiltered = selectedCards.filter(c => c.cardOwner === username)\r\n        //0 selected --> no checks\r\n\r\n        //1 selected --> prevent if its yours\r\n        if (selectedCards.length === 1 && ownCardsFiltered.length === 1) return\r\n\r\n        //2 selected --> prevent from picking unless you are one of the 2 and have sword\r\n        if ((selectedCards.length === 2) && (ownCardsFiltered.length !== 1 || swordOwner !== username)) return\r\n\r\n        //check if round ended & u start clicking --> ownCount & othersCount would be different\r\n        const [ownCount, othersCount, selectedCount] = [ownCards.length, othersCards.length, selectedCards.length]\r\n        if (ownCount + othersCount !== selectedCount) return\r\n\r\n        const cardInfo = await cardsService.select(cardIndex)\r\n        if (!cardInfo) return //should mean card is already selected by someone\r\n\r\n        setCardStates(state => {\r\n            state.ownCards.push(cardInfo)\r\n            return {\r\n                ...state\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSwordSkip = async () => {\r\n        if ((swordOwner !== username)) return\r\n\r\n        const isSuccess = await cardsService.nosword()\r\n    }\r\n\r\n    const forceReset = async () => {\r\n        const isSuccess = await cardsService.forceEnd()\r\n    }\r\n\r\n    const { swordOwner, cards } = cardStates\r\n    const cardComps = cards.map((card) => {\r\n        return <TideCard key={card.cardIndex} username={username} card={card} handleSelect={handleCardSelect} />\r\n    })\r\n\r\n    const isSwordOwner = (swordOwner === username)\r\n\r\n    let isSwordBtnEnabled = false\r\n    if (isSwordOwner) {\r\n        //check if 2 cards are selected and 1 is yours \r\n        //--> waiting for you to decide if you use the sword or not\r\n        const selectedCards = cardStates.cards.filter(c => c.cardOwner !== '')\r\n        const ownCards = selectedCards.filter(c => c.cardOwner === username)\r\n        if (selectedCards.length === 2 && ownCards.length === 1) {\r\n            isSwordBtnEnabled = true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'grid' }}>\r\n            <div style={{ display: 'flex', overflow: 'auto' }}>\r\n                {cardComps}\r\n            </div>\r\n            {isSwordOwner &&\r\n                <button disabled={!isSwordBtnEnabled} onClick={handleSwordSkip}>\r\n                    DONT USE SWORD\r\n                </button>}\r\n            <div style={{ height: 55 }}></div>\r\n            {isSwordOwner &&\r\n                <button onClick={forceReset}>\r\n                    FORCE RESET - FOR BUGS ONLY\r\n                </button>}\r\n            <div></div>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TideCards","import axios from 'axios'\r\nimport { getAuthHeader, setToken } from './tokenManager'\r\nimport config from 'utils/config'\r\n\r\nconst baseUrl = config.baseUrl\r\nconst SERVICE_URL = `${baseUrl}/users`\r\n\r\n/**\r\n * \r\n * @param {String} username \r\n * @returns {Promise<String | null>}\r\n */\r\nconst login = async (username) => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.post(`${SERVICE_URL}/login`, { username: username }, authHeader)\r\n\r\n        const { token } = res.data\r\n        if (!token) {\r\n            console.error(res)\r\n            return null\r\n        }\r\n        \r\n        setToken(token)\r\n        return token\r\n    } catch (error) {\r\n        console.error(error)\r\n        return null\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @returns {Promise<Array<String>>} usernames array\r\n */\r\nconst usernames = async () => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.get(`${SERVICE_URL}/usernames`, authHeader)\r\n        return res.data || []\r\n    } catch (error) {\r\n        console.error(error)\r\n        return ['FAILED TO GET USERNAMES - REFRESH PAGE']\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @returns {Promise<Object>} just <div><pre> object --> this. \r\n */\r\nconst stats = async () => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.get(`${SERVICE_URL}/stats`, authHeader)\r\n        return res\r\n    } catch (error) {\r\n        console.error(error)\r\n        return error\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} username newSword user username \r\n * @returns {Promise<Boolean>}\r\n */\r\nconst changeSwordUser = async (username) => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.post(`${SERVICE_URL}/changeSwordUser`, { newSwordUser: username }, authHeader)\r\n        return (res.status === 204)\r\n    } catch (error) {\r\n        console.error(error)\r\n        return false\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} username \r\n * @returns {Promise<Boolean>}\r\n */\r\nconst addUser = async (username) => {\r\n    try {\r\n        const authHeader = getAuthHeader()\r\n        const res = await axios.post(`${SERVICE_URL}/add`, { username: username }, authHeader)\r\n        return (res.status === 204)\r\n    } catch (error) {\r\n        console.error(error)\r\n        return false\r\n    }\r\n}\r\n\r\nexport default {\r\n    login,\r\n    usernames,\r\n    stats,\r\n    changeSwordUser,\r\n    addUser\r\n}","import { useState, useEffect } from 'react'\r\nimport TideCards from 'components/TideCards'\r\nimport usersService from 'services/users'\r\nimport './App.css'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport NativeSelect from '@material-ui/core/NativeSelect'\r\n\r\nimport tokenManager from 'services/tokenManager'\r\n\r\nconst saveUser = (username, token) => {\r\n    localStorage.setItem('Username', username)\r\n    localStorage.setItem('Token', token)\r\n}\r\nconst getDefaultUser = () => {\r\n    const storedUser = localStorage.getItem('Username')\r\n    const Token = localStorage.getItem('Token')\r\n\r\n    if(!storedUser || !Token)  return ''\r\n\r\n    tokenManager.setToken(Token)\r\n    return storedUser\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}))\r\n\r\nconst LoginScreen = ({ username, setUsername, usernameOptions }) => {\r\n    const classes = useStyles()\r\n\r\n    const handleChange = async (event) => {\r\n        const username = event.target.value\r\n        if (!username) return\r\n\r\n        const token = await usersService.login(username)\r\n        if (!token) {\r\n            console.log('login failed')\r\n            return\r\n        }\r\n\r\n        saveUser(username, token) //update localStorage\r\n        setUsername(username) //update state\r\n    }\r\n\r\n    const options = usernameOptions.map(name => <option key={name} value={name}>{name}</option>)\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"username-native-label-placeholder\">\r\n                    Username\r\n                </InputLabel>\r\n                <NativeSelect\r\n                    value={username}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                        name: 'username',\r\n                        id: 'username-native-label-placeholder',\r\n                    }}\r\n                >\r\n                    <option value=\"\">None</option>\r\n                    {options}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [username, setUsername] = useState(() => getDefaultUser())\r\n    const [usernameOptions, setUsernameOptions] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchUsernames = async () => {\r\n            const usernames = await usersService.usernames()\r\n            setUsernameOptions(usernames)\r\n        }\r\n        fetchUsernames()\r\n    }, [])\r\n\r\n    if (!username) {\r\n        return (\r\n            <div className='App'>\r\n                <LoginScreen username={username} setUsername={setUsername} usernameOptions={usernameOptions} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.clear()\r\n        setUsername('')\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <div>\r\n                <button onClick={() => logout()} >Logout</button>\r\n            </div>\r\n            <TideCards username={username} usernameOptions={usernameOptions} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}