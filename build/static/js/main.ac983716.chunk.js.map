{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","console","log","label","important","react_default","a","createElement","className","content","onClick","baseUrl","formatter","request","then","response","data","services_notes","axios","get","newObject","post","id","put","concat","Notification","message","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","length","notesToShow","filter","App_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ac983716.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  console.log(toggleImportance, 'test1')\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'https://tides-of-battle-lite.herokuapp.com/notes'\r\n\r\nconst formatter = (request) => {\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n  /*const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)*/\r\n  return formatter(axios.get(baseUrl))\r\n}\r\n\r\nconst create = newObject => {\r\n  /*const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)*/\r\n  return formatter(axios.post(baseUrl, newObject))\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  /*const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)*/\r\n  return formatter(axios.put(`${baseUrl}/${id}`, newObject))\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport './index.css'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === '' || message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const rows = () => notesToShow.map(note =>\r\n    <Note\r\n      key={note.id}\r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n\r\n  const addNote = event => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n      </div> \r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      <Notification message={errorMessage} />\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}