# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job:
        steps:
        - task: UseDotNet@2
          displayName: 'Use dotnet 3.1'
          inputs:
            version: 3.1.x
        - task: UseDotNet@2
          displayName: 'Use dotnet 6.0'
          inputs:
            version: 6.0.x
        - task: MicrosoftSecurityDevOps@1
          displayName: 'Microsoft Security DevOps'
          continueOnError: true
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            jdkArchitectureOption: 'x64'
            goals: 'package'
        - task: CopyFiles@2
          inputs:
            Contents: |
              **/*.jar
            TargetFolder: '$(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'


  - stage: Release
    displayName: Release
    jobs:
     - deployment: Sandbox
       environment: Sandbox
     - job:
       steps:
       - checkout: none
       - task: DownloadBuildArtifacts@0
         inputs:
           buildType: 'current'
           downloadType: 'single'
           artifactName: 'drop'
           downloadPath: '$(System.ArtifactsDirectory)'
       - task: AzureCLI@2
         displayName: 'Azure CLI deploy.sh'
         inputs:
          azureSubscription: 'OOTS Sandbox'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            pwd
            ls
            az config set extension.use_dynamic_install=yes_without_prompt
            echo "Start deployment"
            echo "Deploying Frontend:"
            az spring app deploy -n frontend            -s scs01ootssandbox -g RgOOTS --subscription Sandbox --artifact-path ./back-javaSpring/target/back-javaSpring-0.0.1-SNAPSHOT.jar
            echo "End deployment"
          #scriptLocation: 'scriptPath'
          #scriptPath: './deploy.sh'
          addSpnToEnvironment: true
          workingDirectory: '$(System.ArtifactsDirectory)/drop'
          failOnStandardError: false